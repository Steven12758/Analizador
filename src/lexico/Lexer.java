/* The following code was generated by JFlex 1.4.3 on 15/08/22 13:18 */

package lexico;
import static lexico.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 15/08/22 13:18 from the specification file
 * <tt>/root/NetBeansProjects/Analizador/src/lexico/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\3\1\25\1\0\2\3\22\0\1\3\1\4\1\65\1\66"+
    "\3\4\1\67\1\16\1\17\1\14\1\7\1\5\1\10\1\23\1\15"+
    "\12\2\1\22\1\6\1\13\1\12\1\11\1\4\1\0\4\1\1\30"+
    "\1\32\10\1\1\31\3\1\1\64\7\1\1\20\1\0\1\21\1\0"+
    "\1\1\1\0\1\33\1\34\1\40\1\51\1\41\1\52\1\56\1\46"+
    "\1\47\1\1\1\61\1\43\1\55\1\44\1\42\1\54\1\62\1\37"+
    "\1\35\1\36\1\50\1\57\1\60\1\53\1\45\1\63\1\26\1\0"+
    "\1\27\43\0\1\4\37\0\1\24\7\0\1\24\3\0\1\24\3\0"+
    "\1\24\1\0\1\24\6\0\1\24\6\0\1\24\7\0\1\24\3\0"+
    "\1\24\3\0\1\24\1\0\1\24\6\0\1\24\uff05\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\1\1\2\1\3\1\4\1\5\1\2\1\6\1\7"+
    "\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17"+
    "\1\20\1\21\1\22\1\23\1\24\1\25\22\3\1\25"+
    "\2\2\2\3\1\26\1\0\1\26\1\4\1\0\1\1"+
    "\1\27\1\30\1\31\1\32\1\33\1\0\1\5\1\0"+
    "\1\25\1\1\27\3\1\34\2\3\1\34\14\3\2\35"+
    "\1\0\3\3\2\0\2\1\1\36\4\0\1\1\12\3"+
    "\1\34\16\3\1\34\20\3\1\1\3\3\1\1\1\36"+
    "\2\1\1\0\1\4\3\3\1\34\36\3\1\1\1\36"+
    "\1\0\1\1\1\0\5\3\1\34\2\3\1\34\12\3"+
    "\1\34\10\3\1\0\1\1\1\0\1\3\1\34\21\3"+
    "\1\0\1\37\1\3\1\34\13\3\1\0\1\34\11\3"+
    "\1\0\1\3\1\34\6\3\1\34\3\3\1\34\u015c\3"+
    "\2\26";

  private static int [] zzUnpackAction() {
    int [] result = new int[647];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\70\0\160\0\250\0\70\0\340\0\70\0\70"+
    "\0\u0118\0\u0150\0\u0188\0\70\0\u01c0\0\70\0\u01f8\0\u0230"+
    "\0\70\0\70\0\70\0\70\0\u0268\0\u02a0\0\u02d8\0\u0310"+
    "\0\u0348\0\u0380\0\u03b8\0\u03f0\0\u0428\0\u0460\0\u0498\0\u04d0"+
    "\0\u0508\0\u0540\0\u0578\0\u05b0\0\u05e8\0\u0620\0\u0658\0\u0690"+
    "\0\u06c8\0\u0700\0\u0738\0\u0770\0\u07a8\0\340\0\u07e0\0\u0818"+
    "\0\u0850\0\u0888\0\u08c0\0\70\0\70\0\70\0\70\0\70"+
    "\0\u08f8\0\u0930\0\u0968\0\u09a0\0\u09d8\0\u0a10\0\u0a48\0\u0a80"+
    "\0\u0ab8\0\u0af0\0\u0b28\0\u0b60\0\u0b98\0\u0bd0\0\u0c08\0\u0c40"+
    "\0\u0c78\0\u0cb0\0\u0ce8\0\u0d20\0\u0d58\0\u0d90\0\u0dc8\0\u0e00"+
    "\0\u0e38\0\u0e70\0\u0ea8\0\u0ee0\0\u0770\0\u0f18\0\u0f50\0\u0f88"+
    "\0\u0fc0\0\u0ff8\0\u1030\0\u1068\0\u10a0\0\u10d8\0\u1110\0\u1148"+
    "\0\u1180\0\u11b8\0\u11f0\0\u1228\0\70\0\u0700\0\u1260\0\u1298"+
    "\0\u12d0\0\u1308\0\u1340\0\u1378\0\u0888\0\u13b0\0\u13e8\0\u1420"+
    "\0\u1458\0\u1490\0\u14c8\0\u1500\0\u1538\0\u1570\0\u15a8\0\u15e0"+
    "\0\u1618\0\u1650\0\u1688\0\u16c0\0\u16f8\0\u1730\0\u1298\0\u1768"+
    "\0\u17a0\0\u17d8\0\u1810\0\u1848\0\u1880\0\u18b8\0\u18f0\0\u1928"+
    "\0\u1960\0\u1998\0\u19d0\0\u1a08\0\u1a40\0\u1a78\0\u1ab0\0\u1ae8"+
    "\0\u1b20\0\u1b58\0\u1b90\0\u1bc8\0\u1c00\0\u1c38\0\u1c70\0\u1ca8"+
    "\0\u1ce0\0\u1d18\0\u1d50\0\u1d88\0\u1dc0\0\u1df8\0\70\0\u1e30"+
    "\0\u1e68\0\u1ea0\0\u1ed8\0\u1f10\0\u1f48\0\u1f80\0\u1fb8\0\70"+
    "\0\u1ff0\0\u2028\0\u2060\0\u1e30\0\u2098\0\u20d0\0\u2108\0\u2140"+
    "\0\u2178\0\u21b0\0\u21e8\0\u2220\0\u2258\0\u2290\0\u22c8\0\u2300"+
    "\0\u2338\0\u2370\0\u23a8\0\u23e0\0\u2418\0\u2450\0\u2488\0\u24c0"+
    "\0\u24f8\0\u2530\0\u2568\0\u25a0\0\u25d8\0\u2610\0\u2648\0\u2680"+
    "\0\u26b8\0\u26f0\0\u2728\0\u2760\0\u2760\0\u2798\0\u27d0\0\u2808"+
    "\0\u2840\0\u2878\0\u28b0\0\u28e8\0\u2680\0\u2920\0\u2958\0\u2990"+
    "\0\u29c8\0\u2a00\0\u2a38\0\u2a70\0\u2aa8\0\u2ae0\0\u2b18\0\u2b50"+
    "\0\u2b88\0\u2bc0\0\u2bf8\0\u2c30\0\u2c68\0\u2ca0\0\u2cd8\0\u2d10"+
    "\0\u2d48\0\u2d80\0\u2db8\0\u2df0\0\u2e28\0\u2e60\0\u2e98\0\u2d48"+
    "\0\u2ed0\0\u2f08\0\u2f40\0\u2f78\0\u2fb0\0\u2fe8\0\u3020\0\u3058"+
    "\0\u3090\0\u30c8\0\u3100\0\u3138\0\u3170\0\u31a8\0\u31e0\0\u3218"+
    "\0\u3250\0\u3288\0\70\0\u32c0\0\u31e0\0\u32f8\0\u3330\0\u3368"+
    "\0\u33a0\0\u33d8\0\u3410\0\u3448\0\u3480\0\u34b8\0\u34f0\0\u3528"+
    "\0\u3560\0\u34b8\0\u3598\0\u35d0\0\u3608\0\u3640\0\u3678\0\u36b0"+
    "\0\u36e8\0\u3720\0\u3758\0\u3790\0\u37c8\0\u36e8\0\u3800\0\u3838"+
    "\0\u3870\0\u38a8\0\u38e0\0\u3918\0\u3870\0\u3950\0\u3988\0\u39c0"+
    "\0\u3950\0\u39f8\0\u3a30\0\u3a68\0\u3aa0\0\u3ad8\0\u3b10\0\u3b48"+
    "\0\u3b80\0\u3bb8\0\u3bf0\0\u3c28\0\u3c60\0\u3c98\0\u3cd0\0\u3d08"+
    "\0\u3d40\0\u3d78\0\u3db0\0\u3de8\0\u3e20\0\u3e58\0\u3e90\0\u3ec8"+
    "\0\u3f00\0\u3f38\0\u3f70\0\u3fa8\0\u3fe0\0\u4018\0\u4050\0\u4088"+
    "\0\u40c0\0\u40f8\0\u4130\0\u4168\0\u41a0\0\u41d8\0\u4210\0\u4248"+
    "\0\u4280\0\u42b8\0\u42f0\0\u4328\0\u4360\0\u4398\0\u43d0\0\u4408"+
    "\0\u4440\0\u4478\0\u44b0\0\u44e8\0\u4520\0\u4558\0\u4590\0\u45c8"+
    "\0\u4600\0\u4638\0\u4670\0\u46a8\0\u46e0\0\u4718\0\u4750\0\u4788"+
    "\0\u47c0\0\u47f8\0\u4830\0\u4868\0\u48a0\0\u48d8\0\u4910\0\u4948"+
    "\0\u4980\0\u49b8\0\u49f0\0\u4a28\0\u4a60\0\u4a98\0\u4ad0\0\u4b08"+
    "\0\u4b40\0\u4b78\0\u4bb0\0\u4be8\0\u4c20\0\u4c58\0\u4c90\0\u4cc8"+
    "\0\u4d00\0\u4d38\0\u4d70\0\u4da8\0\u4de0\0\u4e18\0\u4e50\0\u4e88"+
    "\0\u4ec0\0\u4ef8\0\u4f30\0\u4f68\0\u4fa0\0\u4fd8\0\u5010\0\u5048"+
    "\0\u5080\0\u50b8\0\u50f0\0\u5128\0\u5160\0\u5198\0\u51d0\0\u5208"+
    "\0\u5240\0\u5278\0\u52b0\0\u52e8\0\u5320\0\u5358\0\u5390\0\u53c8"+
    "\0\u5400\0\u5438\0\u5470\0\u54a8\0\u54e0\0\u5518\0\u5550\0\u5588"+
    "\0\u55c0\0\u55f8\0\u5630\0\u5668\0\u56a0\0\u56d8\0\u5710\0\u5748"+
    "\0\u5780\0\u57b8\0\u57f0\0\u5828\0\u5860\0\u5898\0\u58d0\0\u5908"+
    "\0\u5940\0\u5978\0\u59b0\0\u59e8\0\u5a20\0\u5a58\0\u5a90\0\u5ac8"+
    "\0\u5b00\0\u5b38\0\u5b70\0\u5ba8\0\u5be0\0\u5c18\0\u5c50\0\u5c88"+
    "\0\u5cc0\0\u5cf8\0\u5d30\0\u5d68\0\u5da0\0\u5dd8\0\u5e10\0\u5e48"+
    "\0\u5e80\0\u5eb8\0\u5ef0\0\u5f28\0\u5f60\0\u5f98\0\u5fd0\0\u6008"+
    "\0\u6040\0\u6078\0\u60b0\0\u60e8\0\u6120\0\u6158\0\u6190\0\u61c8"+
    "\0\u6200\0\u6238\0\u6270\0\u62a8\0\u62e0\0\u6318\0\u6350\0\u6388"+
    "\0\u63c0\0\u63f8\0\u6430\0\u6468\0\u64a0\0\u64d8\0\u6510\0\u6548"+
    "\0\u6580\0\u65b8\0\u65f0\0\u6628\0\u6660\0\u6698\0\u66d0\0\u6708"+
    "\0\u6740\0\u6778\0\u67b0\0\u67e8\0\u6820\0\u6858\0\u6890\0\u68c8"+
    "\0\u6900\0\u6938\0\u6970\0\u69a8\0\u69e0\0\u6a18\0\u6a50\0\u6a88"+
    "\0\u6ac0\0\u6af8\0\u6b30\0\u6b68\0\u6ba0\0\u6bd8\0\u6c10\0\u6c48"+
    "\0\u6c80\0\u6cb8\0\u6cf0\0\u6d28\0\u6d60\0\u6d98\0\u6dd0\0\u6e08"+
    "\0\u6e40\0\u6e78\0\u6eb0\0\u6ee8\0\u6f20\0\u6f58\0\u6f90\0\u6fc8"+
    "\0\u7000\0\u7038\0\u7070\0\u70a8\0\u70e0\0\u7118\0\u7150\0\u7188"+
    "\0\u71c0\0\u71f8\0\u7230\0\u7268\0\u72a0\0\u72d8\0\u7310\0\u7348"+
    "\0\u7380\0\u73b8\0\u73f0\0\u7428\0\u7460\0\u7498\0\u74d0\0\u7508"+
    "\0\u7540\0\u7578\0\u75b0\0\u75e8\0\u7620\0\u7658\0\u7690\0\u76c8"+
    "\0\u7700\0\u7738\0\u7770\0\u77a8\0\u77e0\0\u7818\0\u7850\0\u7888"+
    "\0\u78c0\0\u78f8\0\u7930\0\u7968\0\u79a0\0\u79d8\0\u7a10\0\u7a48"+
    "\0\u7a80\0\u7ab8\0\u7af0\0\u7b28\0\u7b60\0\u7b98\0\u7bd0\0\u7c08"+
    "\0\u7c40\0\u7c78\0\u7cb0\0\u7ce8\0\u7d20\0\u7d58\0\u7d90\0\u7dc8"+
    "\0\u7e00\0\u7e38\0\u7e70\0\u7ea8\0\u7ee0\0\u7f18\0\u7f50\0\u7f88"+
    "\0\u7fc0\0\u7ff8\0\u8030\0\u8068\0\u80a0\0\u80d8\0\u8110\0\u8148"+
    "\0\u8180\0\u81b8\0\u81f0\0\u8228\0\u8260\0\u8298\0\u82d0\0\u8308"+
    "\0\u8340\0\u8378\0\u83b0\0\u83e8\0\u8420\0\u8458\0\u8490\0\u84c8"+
    "\0\u8500\0\u8538\0\u8570\0\u85a8\0\340\0\u8570\0\u85a8";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[647];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21"+
    "\1\22\1\23\1\24\1\25\1\6\1\5\1\26\1\2"+
    "\3\3\1\27\1\30\1\31\1\32\1\33\1\34\1\35"+
    "\1\3\1\36\1\37\2\3\1\40\1\3\1\41\1\42"+
    "\1\3\1\43\1\44\1\45\1\46\1\47\3\3\1\50"+
    "\1\51\1\52\1\53\71\0\1\54\1\55\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\54\1\0\1\56\2\0"+
    "\1\60\1\61\2\0\1\62\15\0\1\63\1\56\3\0"+
    "\35\60\4\0\2\56\1\0\1\56\17\0\1\56\3\0"+
    "\35\56\1\0\1\56\10\0\1\64\70\0\1\65\71\0"+
    "\1\66\66\0\1\67\1\70\1\71\71\0\1\72\62\0"+
    "\1\73\3\0\1\74\55\0\1\75\65\0\27\26\1\5"+
    "\40\26\1\0\1\54\1\55\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\4\54\1\76\1\77\27\54\1\0\1\56"+
    "\2\0\1\54\1\55\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\12\54\1\100\2\54\1\101\17\54\1\0\1\56"+
    "\2\0\1\54\1\55\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\6\54\1\102\6\54\1\103\1\104\1\54\1\105"+
    "\7\54\1\106\4\54\1\0\1\56\2\0\1\54\1\55"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\7\54\1\107"+
    "\6\54\1\110\16\54\1\0\1\56\2\0\1\54\1\55"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\11\54\1\111"+
    "\23\54\1\0\1\56\2\0\1\54\1\55\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\3\54\1\112\6\54\1\113"+
    "\1\114\2\54\1\115\16\54\1\0\1\56\2\0\1\54"+
    "\1\55\1\0\1\56\16\0\1\57\1\56\3\0\13\54"+
    "\1\116\7\54\1\117\11\54\1\0\1\56\2\0\1\54"+
    "\1\55\1\0\1\56\16\0\1\57\1\56\3\0\12\54"+
    "\1\120\22\54\1\0\1\56\2\0\1\54\1\55\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\3\54\1\121\5\54"+
    "\1\122\6\54\1\123\14\54\1\0\1\56\2\0\1\54"+
    "\1\55\1\0\1\56\16\0\1\57\1\56\3\0\14\54"+
    "\1\124\5\54\1\125\2\54\1\126\7\54\1\0\1\56"+
    "\2\0\1\54\1\55\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\11\54\1\127\1\130\22\54\1\0\1\56\2\0"+
    "\1\54\1\55\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\3\54\1\131\6\54\1\132\1\133\3\54\1\134\15\54"+
    "\1\0\1\56\2\0\1\54\1\55\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\3\54\1\135\3\54\1\136\10\54"+
    "\1\137\14\54\1\0\1\56\2\0\1\54\1\55\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\12\54\1\140\22\54"+
    "\1\0\1\56\2\0\1\54\1\55\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\12\54\1\141\22\54\1\0\1\56"+
    "\2\0\1\54\1\55\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\3\54\1\132\6\54\1\142\22\54\1\0\1\56"+
    "\2\0\1\54\1\55\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\16\54\1\143\16\54\1\0\1\56\2\0\1\54"+
    "\1\55\1\0\1\56\16\0\1\57\1\56\3\0\6\54"+
    "\1\144\26\54\1\0\1\56\1\0\65\51\1\145\2\51"+
    "\1\0\1\56\1\146\1\0\1\56\17\0\1\56\3\0"+
    "\35\56\1\0\1\56\1\0\67\147\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\150\1\0"+
    "\1\56\2\0\1\152\1\151\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\152\1\0\1\56\2\0\1\153\1\154"+
    "\25\0\35\153\4\0\1\60\1\56\1\0\1\56\16\0"+
    "\1\155\1\56\3\0\35\60\1\0\1\56\2\0\1\60"+
    "\1\61\2\0\1\62\15\0\1\156\1\56\3\0\35\60"+
    "\5\0\1\155\66\0\1\153\1\157\25\0\35\153\33\0"+
    "\1\160\37\0\25\72\1\0\42\72\2\0\1\161\65\0"+
    "\14\74\1\162\2\74\1\163\50\74\2\0\1\75\25\0"+
    "\1\164\10\0\1\164\27\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\5\150\1\165\27\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\5\150\1\166\27\150\1\0\1\56\2\0"+
    "\1\150\1\151\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\12\150\1\167\22\150\1\0\1\56\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\6\150\1\170"+
    "\26\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\3\150\1\171\31\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\14\150\1\172\20\150\1\0\1\56\2\0"+
    "\1\150\1\151\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\12\150\1\173\22\150\1\0\1\56\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\24\150\1\174"+
    "\10\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\17\150\1\175\15\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\3\150\1\176\11\150\1\177\2\150\1\170"+
    "\14\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\7\150\1\200\7\150\1\201"+
    "\15\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\6\150\1\202\23\150\1\203"+
    "\2\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\5\150\1\170\1\204\26\150"+
    "\1\0\1\56\2\0\1\150\1\151\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\14\150\1\205\20\150\1\0\1\56"+
    "\2\0\1\150\1\151\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\3\150\1\206\31\150\1\0\1\56\2\0\1\150"+
    "\1\151\1\0\1\56\16\0\1\57\1\56\3\0\3\150"+
    "\1\207\31\150\1\0\1\56\2\0\1\150\1\151\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\5\150\1\170\27\150"+
    "\1\0\1\56\2\0\1\150\1\151\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\6\150\1\210\15\150\1\211\10\150"+
    "\1\0\1\56\2\0\1\150\1\151\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\14\150\1\212\20\150\1\0\1\56"+
    "\2\0\1\150\1\151\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\6\150\1\213\26\150\1\0\1\56\2\0\1\150"+
    "\1\151\1\0\1\56\16\0\1\57\1\56\3\0\30\150"+
    "\1\177\4\150\1\0\1\56\2\0\1\150\1\151\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\13\150\1\214\21\150"+
    "\1\0\1\56\2\0\1\150\1\151\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\5\150\1\215\1\216\26\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\24\150\1\217\10\150\1\0\1\56\2\0"+
    "\1\150\1\151\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\22\150\1\220\12\150\1\0\1\56\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\20\150\1\221"+
    "\14\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\13\150\1\222\21\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\7\150\1\177\25\150\1\0\1\56\2\0"+
    "\1\150\1\151\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\12\150\1\223\22\150\1\0\1\56\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\14\150\1\224"+
    "\20\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\10\150\1\225\24\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\12\150\1\226\4\150\1\227\15\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\4\150\1\230\30\150\1\0\1\56\2\0"+
    "\1\150\1\151\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\21\150\1\231\13\150\1\0\1\56\2\0\1\150\1\151"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\6\150\1\232"+
    "\26\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\13\150\1\233\3\150\1\234"+
    "\15\150\1\0\1\56\2\0\1\150\1\151\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\17\150\1\235\15\150\1\0"+
    "\1\56\2\0\1\150\1\151\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\7\150\1\236\25\150\1\0\1\56\1\0"+
    "\67\147\1\237\1\0\1\240\1\241\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\35\240\1\0\1\56\2\0\1\242"+
    "\1\241\1\0\1\56\16\0\1\62\1\56\3\0\35\242"+
    "\1\0\1\56\2\0\2\242\1\0\1\56\17\0\1\56"+
    "\3\0\35\242\1\0\1\56\2\0\1\153\1\155\25\0"+
    "\35\153\4\0\1\243\1\154\25\0\35\243\4\0\1\153"+
    "\1\244\25\0\35\153\4\0\1\243\1\157\20\0\1\245"+
    "\4\0\1\246\10\243\1\246\23\243\34\0\1\247\40\0"+
    "\1\161\14\0\1\250\50\0\14\163\1\162\2\163\1\5"+
    "\64\163\1\162\53\163\2\0\1\155\5\0\1\155\60\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\6\240\1\251\26\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\11\240\1\252"+
    "\23\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\13\240\1\253\21\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\11\240\1\254\23\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\6\240\1\255\26\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\10\240\1\256"+
    "\24\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\7\240\1\257\25\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\11\240\1\260\23\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\6\240\1\261\26\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\14\240\1\262"+
    "\20\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\12\240\1\263\22\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\5\240\1\254\27\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\20\240\1\264\14\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\20\240\1\265"+
    "\14\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\10\240\1\266\24\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\5\240\1\257\1\267\26\240\1\0\1\56"+
    "\2\0\1\240\1\241\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\5\240\1\270\27\240\1\0\1\56\2\0\1\240"+
    "\1\241\1\0\1\56\16\0\1\57\1\56\3\0\7\240"+
    "\1\254\25\240\1\0\1\56\2\0\1\240\1\241\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\11\240\1\271\23\240"+
    "\1\0\1\56\2\0\1\240\1\241\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\12\240\1\272\22\240\1\0\1\56"+
    "\2\0\1\240\1\241\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\26\240\1\254\6\240\1\0\1\56\2\0\1\240"+
    "\1\241\1\0\1\56\16\0\1\57\1\56\3\0\17\240"+
    "\1\273\15\240\1\0\1\56\2\0\1\240\1\241\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\13\240\1\254\21\240"+
    "\1\0\1\56\2\0\1\240\1\241\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\6\240\1\274\26\240\1\0\1\56"+
    "\2\0\1\240\1\241\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\11\240\1\275\23\240\1\0\1\56\2\0\1\240"+
    "\1\241\1\0\1\56\16\0\1\57\1\56\3\0\12\240"+
    "\1\252\1\276\21\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\3\240\1\277"+
    "\31\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\4\240\1\300\30\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\5\240\1\301\27\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\3\240\1\257\31\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\3\240\1\302"+
    "\31\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\31\240\1\303\3\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\6\240\1\304\26\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\27\240\1\305\5\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\13\240\1\255"+
    "\21\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\20\240\1\300\14\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\12\240\1\254\22\240\1\0\1\56\2\0"+
    "\1\240\1\241\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\3\240\1\306\31\240\1\0\1\56\2\0\1\240\1\241"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\21\240\1\254"+
    "\13\240\1\0\1\56\2\0\1\240\1\241\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\13\240\1\301\21\240\1\0"+
    "\1\56\2\0\1\240\1\241\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\17\240\1\307\15\240\1\0\1\56\2\0"+
    "\1\310\1\311\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\310\1\0\1\56\2\0\1\312\1\311\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\312\1\0\1\56\2\0"+
    "\2\312\1\0\1\56\17\0\1\56\3\0\35\312\1\0"+
    "\1\56\2\0\1\243\26\0\35\243\4\0\1\243\1\244"+
    "\20\0\1\245\4\0\1\313\10\243\1\313\23\243\5\0"+
    "\1\245\20\0\1\245\45\0\1\243\1\314\5\0\1\315"+
    "\12\0\1\316\4\0\35\243\35\0\1\317\36\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\7\310"+
    "\1\320\25\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\7\310\1\321\25\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\11\310\1\322\23\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\17\310\1\323\15\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\7\310"+
    "\1\324\25\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\6\310\1\325\26\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\7\310\1\325\25\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\10\310\1\326\24\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\5\310"+
    "\1\327\27\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\30\310\1\330\4\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\7\310\1\331\25\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\17\310\1\332\15\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\16\310"+
    "\1\325\16\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\17\310\1\333\15\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\5\310\1\325\27\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\14\310\1\334\20\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\7\310"+
    "\1\335\25\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\27\310\1\336\5\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\3\310\1\337\31\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\7\310\1\340\25\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\11\310"+
    "\1\341\23\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\20\310\1\342\14\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\13\310\1\336\21\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\11\310\1\325\23\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\13\310"+
    "\1\343\21\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\3\310\1\344\31\310"+
    "\1\0\1\56\2\0\1\310\1\311\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\11\310\1\345\23\310\1\0\1\56"+
    "\2\0\1\310\1\311\1\0\1\56\16\0\1\57\1\56"+
    "\3\0\3\310\1\346\31\310\1\0\1\56\2\0\1\310"+
    "\1\311\1\0\1\56\16\0\1\57\1\56\3\0\6\310"+
    "\1\347\26\310\1\0\1\56\2\0\1\310\1\311\1\0"+
    "\1\56\16\0\1\57\1\56\3\0\14\310\1\350\20\310"+
    "\1\0\1\56\2\0\1\351\1\352\1\0\1\56\16\0"+
    "\1\57\1\56\3\0\35\351\1\0\1\56\2\0\1\353"+
    "\1\352\1\0\1\56\16\0\1\62\1\56\3\0\35\353"+
    "\1\0\1\56\2\0\2\353\1\0\1\56\17\0\1\56"+
    "\3\0\35\353\1\0\1\56\2\0\1\243\1\354\5\0"+
    "\1\354\12\0\1\316\4\0\35\243\5\0\1\314\20\0"+
    "\1\316\46\0\1\355\76\0\1\356\57\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\3\351\1\357"+
    "\31\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\6\351\1\360\26\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\3\351\1\361\31\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\10\351\1\360\24\351\1\0\1\56\2\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\12\351\1\362"+
    "\22\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\16\351\1\360\16\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\17\351\1\363\15\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\5\351\1\360\27\351\1\0\1\56\2\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\14\351\1\360"+
    "\20\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\7\351\1\364\25\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\14\351\1\365\20\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\21\351\1\366\13\351\1\0\1\56\2\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\6\351\1\366"+
    "\26\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\11\351\1\360\23\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\14\351\1\367\20\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\22\351\1\370\12\351\1\0\1\56\2\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\25\351\1\371"+
    "\7\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\13\351\1\372\21\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\13\351\1\373\21\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\26\351\1\374\6\351\1\0\1\56\2\0\1\351\1\352"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\10\351\1\375"+
    "\24\351\1\0\1\56\2\0\1\351\1\352\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\6\351\1\374\26\351\1\0"+
    "\1\56\2\0\1\351\1\352\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\17\351\1\376\15\351\1\0\1\56\2\0"+
    "\1\351\1\352\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\26\351\1\360\6\351\1\0\1\56\2\0\1\377\1\u0100"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\377\1\0"+
    "\1\56\2\0\1\u0101\1\u0100\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0101\1\0\1\56\2\0\2\u0101\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0101\1\0\1\56\3\0"+
    "\1\354\20\0\1\316\46\0\1\355\20\0\1\u0102\55\0"+
    "\1\u0103\57\0\1\377\1\u0100\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\10\377\1\u0104\24\377\1\0\1\56\2\0"+
    "\1\377\1\u0100\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\14\377\1\u0105\20\377\1\0\1\56\2\0\1\377\1\u0100"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\14\377\1\u0106"+
    "\20\377\1\0\1\56\2\0\1\377\1\u0100\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\11\377\1\u0107\23\377\1\0"+
    "\1\56\2\0\1\377\1\u0100\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\11\377\1\u0108\23\377\1\0\1\56\2\0"+
    "\1\377\1\u0100\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\20\377\1\u0109\14\377\1\0\1\56\2\0\1\377\1\u0100"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\5\377\1\u0105"+
    "\27\377\1\0\1\56\2\0\1\377\1\u0100\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\10\377\1\u010a\24\377\1\0"+
    "\1\56\2\0\1\377\1\u0100\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\3\377\1\u010b\31\377\1\0\1\56\2\0"+
    "\1\377\1\u0100\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\11\377\1\u010c\23\377\1\0\1\56\2\0\1\377\1\u0100"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\6\377\1\u0105"+
    "\26\377\1\0\1\56\2\0\1\377\1\u0100\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\15\377\1\u0105\17\377\1\0"+
    "\1\56\2\0\1\377\1\u0100\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\11\377\1\u0105\23\377\1\0\1\56\2\0"+
    "\1\377\1\u0100\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\6\377\1\u010d\26\377\1\0\1\56\2\0\1\377\1\u0100"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\13\377\1\u0109"+
    "\21\377\1\0\1\56\2\0\1\u010e\1\u010f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u010e\1\0\1\56\2\0"+
    "\1\u0110\1\u010f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0110\1\0\1\56\2\0\2\u0110\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0110\1\0\1\56\3\0\1\u0111\66\0"+
    "\1\u010e\1\u010f\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\6\u010e\1\u0112\26\u010e\1\0\1\56\2\0\1\u010e\1\u010f"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\17\u010e\1\u0113"+
    "\15\u010e\1\0\1\56\2\0\1\u010e\1\u010f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\14\u010e\1\u0114\20\u010e\1\0"+
    "\1\56\2\0\1\u010e\1\u010f\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\5\u010e\1\u0112\27\u010e\1\0\1\56\2\0"+
    "\1\u010e\1\u010f\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\11\u010e\1\u0112\23\u010e\1\0\1\56\2\0\1\u010e\1\u010f"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\11\u010e\1\u0115"+
    "\23\u010e\1\0\1\56\2\0\1\u010e\1\u010f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\10\u010e\1\u0116\24\u010e\1\0"+
    "\1\56\2\0\1\u010e\1\u010f\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\14\u010e\1\u0117\20\u010e\1\0\1\56\2\0"+
    "\1\u010e\1\u010f\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\11\u010e\1\u0118\23\u010e\1\0\1\56\2\0\1\u0119\1\u011a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0119\1\0"+
    "\1\56\2\0\1\u011b\1\u011a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u011b\1\0\1\56\2\0\2\u011b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u011b\1\0\1\56\3\0"+
    "\1\u0111\25\0\1\u011c\10\0\1\u011c\27\0\1\u0119\1\u011a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\33\u0119\1\u011d"+
    "\1\u0119\1\0\1\56\2\0\1\u0119\1\u011a\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\6\u0119\1\u011e\26\u0119\1\0"+
    "\1\56\2\0\1\u0119\1\u011a\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\12\u0119\1\u011f\22\u0119\1\0\1\56\2\0"+
    "\1\u0119\1\u011a\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\11\u0119\1\u011e\23\u0119\1\0\1\56\2\0\1\u0119\1\u011a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\6\u0119\1\u0120"+
    "\26\u0119\1\0\1\56\2\0\1\u0119\1\u011a\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\21\u0119\1\u011e\13\u0119\1\0"+
    "\1\56\2\0\1\u0121\1\u0122\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0121\1\0\1\56\2\0\1\u0123\1\u0122"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0123\1\0"+
    "\1\56\2\0\2\u0123\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0123\1\0\1\56\3\0\1\354\5\0\1\354\12\0"+
    "\1\316\45\0\1\u0121\1\u0122\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\11\u0121\1\u0124\23\u0121\1\0\1\56\2\0"+
    "\1\u0121\1\u0122\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\22\u0121\1\u0125\12\u0121\1\0\1\56\2\0\1\u0121\1\u0122"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\5\u0121\1\u0125"+
    "\27\u0121\1\0\1\56\2\0\1\u0126\1\u0127\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0126\1\0\1\56\2\0"+
    "\1\u0128\1\u0127\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0128\1\0\1\56\2\0\2\u0128\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0128\1\0\1\56\2\0\1\u0126\1\u0127"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\21\u0126\1\u0129"+
    "\13\u0126\1\0\1\56\2\0\1\u012a\1\u012b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u012a\1\0\1\56\2\0"+
    "\1\u012c\1\u012b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u012c\1\0\1\56\2\0\2\u012c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u012c\1\0\1\56\2\0\1\u012d\1\u012e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u012d\1\0"+
    "\1\56\2\0\1\u012f\1\u012e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u012f\1\0\1\56\2\0\2\u012f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u012f\1\0\1\56\2\0"+
    "\1\u0130\1\u0131\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0130\1\0\1\56\2\0\1\u0132\1\u0131\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0132\1\0\1\56\2\0"+
    "\2\u0132\1\0\1\56\17\0\1\56\3\0\35\u0132\1\0"+
    "\1\56\2\0\1\u0133\1\u0134\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0133\1\0\1\56\2\0\1\u0135\1\u0134"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0135\1\0"+
    "\1\56\2\0\2\u0135\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0135\1\0\1\56\2\0\1\u0136\1\u0137\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0136\1\0\1\56\2\0"+
    "\1\u0138\1\u0137\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0138\1\0\1\56\2\0\2\u0138\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0138\1\0\1\56\2\0\1\u0139\1\u013a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0139\1\0"+
    "\1\56\2\0\1\u013b\1\u013a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u013b\1\0\1\56\2\0\2\u013b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u013b\1\0\1\56\2\0"+
    "\1\u013c\1\u013d\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u013c\1\0\1\56\2\0\1\u013e\1\u013d\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u013e\1\0\1\56\2\0"+
    "\2\u013e\1\0\1\56\17\0\1\56\3\0\35\u013e\1\0"+
    "\1\56\2\0\1\u013f\1\u0140\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u013f\1\0\1\56\2\0\1\u0141\1\u0140"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0141\1\0"+
    "\1\56\2\0\2\u0141\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0141\1\0\1\56\2\0\1\u0142\1\u0143\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0142\1\0\1\56\2\0"+
    "\1\u0144\1\u0143\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0144\1\0\1\56\2\0\2\u0144\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0144\1\0\1\56\2\0\1\u0145\1\u0146"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0145\1\0"+
    "\1\56\2\0\1\u0147\1\u0146\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0147\1\0\1\56\2\0\2\u0147\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0147\1\0\1\56\2\0"+
    "\1\u0148\1\u0149\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0148\1\0\1\56\2\0\1\u014a\1\u0149\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u014a\1\0\1\56\2\0"+
    "\2\u014a\1\0\1\56\17\0\1\56\3\0\35\u014a\1\0"+
    "\1\56\2\0\1\u014b\1\u014c\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u014b\1\0\1\56\2\0\1\u014d\1\u014c"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u014d\1\0"+
    "\1\56\2\0\2\u014d\1\0\1\56\17\0\1\56\3\0"+
    "\35\u014d\1\0\1\56\2\0\1\u014e\1\u014f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u014e\1\0\1\56\2\0"+
    "\1\u0150\1\u014f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0150\1\0\1\56\2\0\2\u0150\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0150\1\0\1\56\2\0\1\u0151\1\u0152"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0151\1\0"+
    "\1\56\2\0\1\u0153\1\u0152\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0153\1\0\1\56\2\0\2\u0153\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0153\1\0\1\56\2\0"+
    "\1\u0154\1\u0155\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0154\1\0\1\56\2\0\1\u0156\1\u0155\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0156\1\0\1\56\2\0"+
    "\2\u0156\1\0\1\56\17\0\1\56\3\0\35\u0156\1\0"+
    "\1\56\2\0\1\u0157\1\u0158\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0157\1\0\1\56\2\0\1\u0159\1\u0158"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0159\1\0"+
    "\1\56\2\0\2\u0159\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0159\1\0\1\56\2\0\1\u015a\1\u015b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u015a\1\0\1\56\2\0"+
    "\1\u015c\1\u015b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u015c\1\0\1\56\2\0\2\u015c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u015c\1\0\1\56\2\0\1\u015d\1\u015e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u015d\1\0"+
    "\1\56\2\0\1\u015f\1\u015e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u015f\1\0\1\56\2\0\2\u015f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u015f\1\0\1\56\2\0"+
    "\1\u0160\1\u0161\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0160\1\0\1\56\2\0\1\u0162\1\u0161\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0162\1\0\1\56\2\0"+
    "\2\u0162\1\0\1\56\17\0\1\56\3\0\35\u0162\1\0"+
    "\1\56\2\0\1\u0163\1\u0164\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0163\1\0\1\56\2\0\1\u0165\1\u0164"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0165\1\0"+
    "\1\56\2\0\2\u0165\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0165\1\0\1\56\2\0\1\u0166\1\u0167\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0166\1\0\1\56\2\0"+
    "\1\u0168\1\u0167\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0168\1\0\1\56\2\0\2\u0168\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0168\1\0\1\56\2\0\1\u0169\1\u016a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0169\1\0"+
    "\1\56\2\0\1\u016b\1\u016a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u016b\1\0\1\56\2\0\2\u016b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u016b\1\0\1\56\2\0"+
    "\1\u016c\1\u016d\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u016c\1\0\1\56\2\0\1\u016e\1\u016d\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u016e\1\0\1\56\2\0"+
    "\2\u016e\1\0\1\56\17\0\1\56\3\0\35\u016e\1\0"+
    "\1\56\2\0\1\u016f\1\u0170\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u016f\1\0\1\56\2\0\1\u0171\1\u0170"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0171\1\0"+
    "\1\56\2\0\2\u0171\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0171\1\0\1\56\2\0\1\u0172\1\u0173\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0172\1\0\1\56\2\0"+
    "\1\u0174\1\u0173\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0174\1\0\1\56\2\0\2\u0174\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0174\1\0\1\56\2\0\1\u0175\1\u0176"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0175\1\0"+
    "\1\56\2\0\1\u0177\1\u0176\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0177\1\0\1\56\2\0\2\u0177\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0177\1\0\1\56\2\0"+
    "\1\u0178\1\u0179\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0178\1\0\1\56\2\0\1\u017a\1\u0179\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u017a\1\0\1\56\2\0"+
    "\2\u017a\1\0\1\56\17\0\1\56\3\0\35\u017a\1\0"+
    "\1\56\2\0\1\u017b\1\u017c\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u017b\1\0\1\56\2\0\1\u017d\1\u017c"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u017d\1\0"+
    "\1\56\2\0\2\u017d\1\0\1\56\17\0\1\56\3\0"+
    "\35\u017d\1\0\1\56\2\0\1\u017e\1\u017f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u017e\1\0\1\56\2\0"+
    "\1\u0180\1\u017f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0180\1\0\1\56\2\0\2\u0180\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0180\1\0\1\56\2\0\1\u0181\1\u0182"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0181\1\0"+
    "\1\56\2\0\1\u0183\1\u0182\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0183\1\0\1\56\2\0\2\u0183\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0183\1\0\1\56\2\0"+
    "\1\u0184\1\u0185\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0184\1\0\1\56\2\0\1\u0186\1\u0185\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0186\1\0\1\56\2\0"+
    "\2\u0186\1\0\1\56\17\0\1\56\3\0\35\u0186\1\0"+
    "\1\56\2\0\1\u0187\1\u0188\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0187\1\0\1\56\2\0\1\u0189\1\u0188"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0189\1\0"+
    "\1\56\2\0\2\u0189\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0189\1\0\1\56\2\0\1\u018a\1\u018b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u018a\1\0\1\56\2\0"+
    "\1\u018c\1\u018b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u018c\1\0\1\56\2\0\2\u018c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u018c\1\0\1\56\2\0\1\u018d\1\u018e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u018d\1\0"+
    "\1\56\2\0\1\u018f\1\u018e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u018f\1\0\1\56\2\0\2\u018f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u018f\1\0\1\56\2\0"+
    "\1\u0190\1\u0191\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0190\1\0\1\56\2\0\1\u0192\1\u0191\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0192\1\0\1\56\2\0"+
    "\2\u0192\1\0\1\56\17\0\1\56\3\0\35\u0192\1\0"+
    "\1\56\2\0\1\u0193\1\u0194\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0193\1\0\1\56\2\0\1\u0195\1\u0194"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0195\1\0"+
    "\1\56\2\0\2\u0195\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0195\1\0\1\56\2\0\1\u0196\1\u0197\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0196\1\0\1\56\2\0"+
    "\1\u0198\1\u0197\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0198\1\0\1\56\2\0\2\u0198\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0198\1\0\1\56\2\0\1\u0199\1\u019a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0199\1\0"+
    "\1\56\2\0\1\u019b\1\u019a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u019b\1\0\1\56\2\0\2\u019b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u019b\1\0\1\56\2\0"+
    "\1\u019c\1\u019d\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u019c\1\0\1\56\2\0\1\u019e\1\u019d\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u019e\1\0\1\56\2\0"+
    "\2\u019e\1\0\1\56\17\0\1\56\3\0\35\u019e\1\0"+
    "\1\56\2\0\1\u019f\1\u01a0\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u019f\1\0\1\56\2\0\1\u01a1\1\u01a0"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01a1\1\0"+
    "\1\56\2\0\2\u01a1\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01a1\1\0\1\56\2\0\1\u01a2\1\u01a3\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01a2\1\0\1\56\2\0"+
    "\1\u01a4\1\u01a3\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01a4\1\0\1\56\2\0\2\u01a4\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01a4\1\0\1\56\2\0\1\u01a5\1\u01a6"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01a5\1\0"+
    "\1\56\2\0\1\u01a7\1\u01a6\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01a7\1\0\1\56\2\0\2\u01a7\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01a7\1\0\1\56\2\0"+
    "\1\u01a8\1\u01a9\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01a8\1\0\1\56\2\0\1\u01aa\1\u01a9\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01aa\1\0\1\56\2\0"+
    "\2\u01aa\1\0\1\56\17\0\1\56\3\0\35\u01aa\1\0"+
    "\1\56\2\0\1\u01ab\1\u01ac\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01ab\1\0\1\56\2\0\1\u01ad\1\u01ac"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01ad\1\0"+
    "\1\56\2\0\2\u01ad\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01ad\1\0\1\56\2\0\1\u01ae\1\u01af\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01ae\1\0\1\56\2\0"+
    "\1\u01b0\1\u01af\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01b0\1\0\1\56\2\0\2\u01b0\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01b0\1\0\1\56\2\0\1\u01b1\1\u01b2"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01b1\1\0"+
    "\1\56\2\0\1\u01b3\1\u01b2\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01b3\1\0\1\56\2\0\2\u01b3\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01b3\1\0\1\56\2\0"+
    "\1\u01b4\1\u01b5\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01b4\1\0\1\56\2\0\1\u01b6\1\u01b5\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01b6\1\0\1\56\2\0"+
    "\2\u01b6\1\0\1\56\17\0\1\56\3\0\35\u01b6\1\0"+
    "\1\56\2\0\1\u01b7\1\u01b8\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01b7\1\0\1\56\2\0\1\u01b9\1\u01b8"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01b9\1\0"+
    "\1\56\2\0\2\u01b9\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01b9\1\0\1\56\2\0\1\u01ba\1\u01bb\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01ba\1\0\1\56\2\0"+
    "\1\u01bc\1\u01bb\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01bc\1\0\1\56\2\0\2\u01bc\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01bc\1\0\1\56\2\0\1\u01bd\1\u01be"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01bd\1\0"+
    "\1\56\2\0\1\u01bf\1\u01be\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01bf\1\0\1\56\2\0\2\u01bf\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01bf\1\0\1\56\2\0"+
    "\1\u01c0\1\u01c1\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01c0\1\0\1\56\2\0\1\u01c2\1\u01c1\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01c2\1\0\1\56\2\0"+
    "\2\u01c2\1\0\1\56\17\0\1\56\3\0\35\u01c2\1\0"+
    "\1\56\2\0\1\u01c3\1\u01c4\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01c3\1\0\1\56\2\0\1\u01c5\1\u01c4"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01c5\1\0"+
    "\1\56\2\0\2\u01c5\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01c5\1\0\1\56\2\0\1\u01c6\1\u01c7\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01c6\1\0\1\56\2\0"+
    "\1\u01c8\1\u01c7\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01c8\1\0\1\56\2\0\2\u01c8\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01c8\1\0\1\56\2\0\1\u01c9\1\u01ca"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01c9\1\0"+
    "\1\56\2\0\1\u01cb\1\u01ca\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01cb\1\0\1\56\2\0\2\u01cb\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01cb\1\0\1\56\2\0"+
    "\1\u01cc\1\u01cd\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01cc\1\0\1\56\2\0\1\u01ce\1\u01cd\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01ce\1\0\1\56\2\0"+
    "\2\u01ce\1\0\1\56\17\0\1\56\3\0\35\u01ce\1\0"+
    "\1\56\2\0\1\u01cf\1\u01d0\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01cf\1\0\1\56\2\0\1\u01d1\1\u01d0"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01d1\1\0"+
    "\1\56\2\0\2\u01d1\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01d1\1\0\1\56\2\0\1\u01d2\1\u01d3\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01d2\1\0\1\56\2\0"+
    "\1\u01d4\1\u01d3\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01d4\1\0\1\56\2\0\2\u01d4\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01d4\1\0\1\56\2\0\1\u01d5\1\u01d6"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01d5\1\0"+
    "\1\56\2\0\1\u01d7\1\u01d6\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01d7\1\0\1\56\2\0\2\u01d7\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01d7\1\0\1\56\2\0"+
    "\1\u01d8\1\u01d9\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01d8\1\0\1\56\2\0\1\u01da\1\u01d9\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01da\1\0\1\56\2\0"+
    "\2\u01da\1\0\1\56\17\0\1\56\3\0\35\u01da\1\0"+
    "\1\56\2\0\1\u01db\1\u01dc\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01db\1\0\1\56\2\0\1\u01dd\1\u01dc"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01dd\1\0"+
    "\1\56\2\0\2\u01dd\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01dd\1\0\1\56\2\0\1\u01de\1\u01df\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01de\1\0\1\56\2\0"+
    "\1\u01e0\1\u01df\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01e0\1\0\1\56\2\0\2\u01e0\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01e0\1\0\1\56\2\0\1\u01e1\1\u01e2"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01e1\1\0"+
    "\1\56\2\0\1\u01e3\1\u01e2\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01e3\1\0\1\56\2\0\2\u01e3\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01e3\1\0\1\56\2\0"+
    "\1\u01e4\1\u01e5\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01e4\1\0\1\56\2\0\1\u01e6\1\u01e5\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01e6\1\0\1\56\2\0"+
    "\2\u01e6\1\0\1\56\17\0\1\56\3\0\35\u01e6\1\0"+
    "\1\56\2\0\1\u01e7\1\u01e8\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01e7\1\0\1\56\2\0\1\u01e9\1\u01e8"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01e9\1\0"+
    "\1\56\2\0\2\u01e9\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01e9\1\0\1\56\2\0\1\u01ea\1\u01eb\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01ea\1\0\1\56\2\0"+
    "\1\u01ec\1\u01eb\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01ec\1\0\1\56\2\0\2\u01ec\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01ec\1\0\1\56\2\0\1\u01ed\1\u01ee"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01ed\1\0"+
    "\1\56\2\0\1\u01ef\1\u01ee\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01ef\1\0\1\56\2\0\2\u01ef\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01ef\1\0\1\56\2\0"+
    "\1\u01f0\1\u01f1\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01f0\1\0\1\56\2\0\1\u01f2\1\u01f1\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01f2\1\0\1\56\2\0"+
    "\2\u01f2\1\0\1\56\17\0\1\56\3\0\35\u01f2\1\0"+
    "\1\56\2\0\1\u01f3\1\u01f4\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01f3\1\0\1\56\2\0\1\u01f5\1\u01f4"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u01f5\1\0"+
    "\1\56\2\0\2\u01f5\1\0\1\56\17\0\1\56\3\0"+
    "\35\u01f5\1\0\1\56\2\0\1\u01f6\1\u01f7\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u01f6\1\0\1\56\2\0"+
    "\1\u01f8\1\u01f7\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u01f8\1\0\1\56\2\0\2\u01f8\1\0\1\56\17\0"+
    "\1\56\3\0\35\u01f8\1\0\1\56\2\0\1\u01f9\1\u01fa"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u01f9\1\0"+
    "\1\56\2\0\1\u01fb\1\u01fa\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u01fb\1\0\1\56\2\0\2\u01fb\1\0"+
    "\1\56\17\0\1\56\3\0\35\u01fb\1\0\1\56\2\0"+
    "\1\u01fc\1\u01fd\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u01fc\1\0\1\56\2\0\1\u01fe\1\u01fd\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u01fe\1\0\1\56\2\0"+
    "\2\u01fe\1\0\1\56\17\0\1\56\3\0\35\u01fe\1\0"+
    "\1\56\2\0\1\u01ff\1\u0200\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u01ff\1\0\1\56\2\0\1\u0201\1\u0200"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0201\1\0"+
    "\1\56\2\0\2\u0201\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0201\1\0\1\56\2\0\1\u0202\1\u0203\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0202\1\0\1\56\2\0"+
    "\1\u0204\1\u0203\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0204\1\0\1\56\2\0\2\u0204\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0204\1\0\1\56\2\0\1\u0205\1\u0206"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0205\1\0"+
    "\1\56\2\0\1\u0207\1\u0206\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0207\1\0\1\56\2\0\2\u0207\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0207\1\0\1\56\2\0"+
    "\1\u0208\1\u0209\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0208\1\0\1\56\2\0\1\u020a\1\u0209\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u020a\1\0\1\56\2\0"+
    "\2\u020a\1\0\1\56\17\0\1\56\3\0\35\u020a\1\0"+
    "\1\56\2\0\1\u020b\1\u020c\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u020b\1\0\1\56\2\0\1\u020d\1\u020c"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u020d\1\0"+
    "\1\56\2\0\2\u020d\1\0\1\56\17\0\1\56\3\0"+
    "\35\u020d\1\0\1\56\2\0\1\u020e\1\u020f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u020e\1\0\1\56\2\0"+
    "\1\u0210\1\u020f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0210\1\0\1\56\2\0\2\u0210\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0210\1\0\1\56\2\0\1\u0211\1\u0212"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0211\1\0"+
    "\1\56\2\0\1\u0213\1\u0212\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0213\1\0\1\56\2\0\2\u0213\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0213\1\0\1\56\2\0"+
    "\1\u0214\1\u0215\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0214\1\0\1\56\2\0\1\u0216\1\u0215\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0216\1\0\1\56\2\0"+
    "\2\u0216\1\0\1\56\17\0\1\56\3\0\35\u0216\1\0"+
    "\1\56\2\0\1\u0217\1\u0218\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0217\1\0\1\56\2\0\1\u0219\1\u0218"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0219\1\0"+
    "\1\56\2\0\2\u0219\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0219\1\0\1\56\2\0\1\u021a\1\u021b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u021a\1\0\1\56\2\0"+
    "\1\u021c\1\u021b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u021c\1\0\1\56\2\0\2\u021c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u021c\1\0\1\56\2\0\1\u021d\1\u021e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u021d\1\0"+
    "\1\56\2\0\1\u021f\1\u021e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u021f\1\0\1\56\2\0\2\u021f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u021f\1\0\1\56\2\0"+
    "\1\u0220\1\u0221\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0220\1\0\1\56\2\0\1\u0222\1\u0221\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0222\1\0\1\56\2\0"+
    "\2\u0222\1\0\1\56\17\0\1\56\3\0\35\u0222\1\0"+
    "\1\56\2\0\1\u0223\1\u0224\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0223\1\0\1\56\2\0\1\u0225\1\u0224"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0225\1\0"+
    "\1\56\2\0\2\u0225\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0225\1\0\1\56\2\0\1\u0226\1\u0227\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0226\1\0\1\56\2\0"+
    "\1\u0228\1\u0227\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0228\1\0\1\56\2\0\2\u0228\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0228\1\0\1\56\2\0\1\u0229\1\u022a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0229\1\0"+
    "\1\56\2\0\1\u022b\1\u022a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u022b\1\0\1\56\2\0\2\u022b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u022b\1\0\1\56\2\0"+
    "\1\u022c\1\u022d\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u022c\1\0\1\56\2\0\1\u022e\1\u022d\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u022e\1\0\1\56\2\0"+
    "\2\u022e\1\0\1\56\17\0\1\56\3\0\35\u022e\1\0"+
    "\1\56\2\0\1\u022f\1\u0230\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u022f\1\0\1\56\2\0\1\u0231\1\u0230"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0231\1\0"+
    "\1\56\2\0\2\u0231\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0231\1\0\1\56\2\0\1\u0232\1\u0233\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0232\1\0\1\56\2\0"+
    "\1\u0234\1\u0233\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0234\1\0\1\56\2\0\2\u0234\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0234\1\0\1\56\2\0\1\u0235\1\u0236"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0235\1\0"+
    "\1\56\2\0\1\u0237\1\u0236\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0237\1\0\1\56\2\0\2\u0237\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0237\1\0\1\56\2\0"+
    "\1\u0238\1\u0239\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0238\1\0\1\56\2\0\1\u023a\1\u0239\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u023a\1\0\1\56\2\0"+
    "\2\u023a\1\0\1\56\17\0\1\56\3\0\35\u023a\1\0"+
    "\1\56\2\0\1\u023b\1\u023c\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u023b\1\0\1\56\2\0\1\u023d\1\u023c"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u023d\1\0"+
    "\1\56\2\0\2\u023d\1\0\1\56\17\0\1\56\3\0"+
    "\35\u023d\1\0\1\56\2\0\1\u023e\1\u023f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u023e\1\0\1\56\2\0"+
    "\1\u0240\1\u023f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0240\1\0\1\56\2\0\2\u0240\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0240\1\0\1\56\2\0\1\u0241\1\u0242"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0241\1\0"+
    "\1\56\2\0\1\u0243\1\u0242\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0243\1\0\1\56\2\0\2\u0243\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0243\1\0\1\56\2\0"+
    "\1\u0244\1\u0245\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0244\1\0\1\56\2\0\1\u0246\1\u0245\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0246\1\0\1\56\2\0"+
    "\2\u0246\1\0\1\56\17\0\1\56\3\0\35\u0246\1\0"+
    "\1\56\2\0\1\u0247\1\u0248\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0247\1\0\1\56\2\0\1\u0249\1\u0248"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0249\1\0"+
    "\1\56\2\0\2\u0249\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0249\1\0\1\56\2\0\1\u024a\1\u024b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u024a\1\0\1\56\2\0"+
    "\1\u024c\1\u024b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u024c\1\0\1\56\2\0\2\u024c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u024c\1\0\1\56\2\0\1\u024d\1\u024e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u024d\1\0"+
    "\1\56\2\0\1\u024f\1\u024e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u024f\1\0\1\56\2\0\2\u024f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u024f\1\0\1\56\2\0"+
    "\1\u0250\1\u0251\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0250\1\0\1\56\2\0\1\u0252\1\u0251\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0252\1\0\1\56\2\0"+
    "\2\u0252\1\0\1\56\17\0\1\56\3\0\35\u0252\1\0"+
    "\1\56\2\0\1\u0253\1\u0254\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0253\1\0\1\56\2\0\1\u0255\1\u0254"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0255\1\0"+
    "\1\56\2\0\2\u0255\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0255\1\0\1\56\2\0\1\u0256\1\u0257\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0256\1\0\1\56\2\0"+
    "\1\u0258\1\u0257\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0258\1\0\1\56\2\0\2\u0258\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0258\1\0\1\56\2\0\1\u0259\1\u025a"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0259\1\0"+
    "\1\56\2\0\1\u025b\1\u025a\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u025b\1\0\1\56\2\0\2\u025b\1\0"+
    "\1\56\17\0\1\56\3\0\35\u025b\1\0\1\56\2\0"+
    "\1\u025c\1\u025d\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u025c\1\0\1\56\2\0\1\u025e\1\u025d\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u025e\1\0\1\56\2\0"+
    "\2\u025e\1\0\1\56\17\0\1\56\3\0\35\u025e\1\0"+
    "\1\56\2\0\1\u025f\1\u0260\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u025f\1\0\1\56\2\0\1\u0261\1\u0260"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0261\1\0"+
    "\1\56\2\0\2\u0261\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0261\1\0\1\56\2\0\1\u0262\1\u0263\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0262\1\0\1\56\2\0"+
    "\1\u0264\1\u0263\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0264\1\0\1\56\2\0\2\u0264\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0264\1\0\1\56\2\0\1\u0265\1\u0266"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0265\1\0"+
    "\1\56\2\0\1\u0267\1\u0266\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0267\1\0\1\56\2\0\2\u0267\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0267\1\0\1\56\2\0"+
    "\1\u0268\1\u0269\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0268\1\0\1\56\2\0\1\u026a\1\u0269\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u026a\1\0\1\56\2\0"+
    "\2\u026a\1\0\1\56\17\0\1\56\3\0\35\u026a\1\0"+
    "\1\56\2\0\1\u026b\1\u026c\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u026b\1\0\1\56\2\0\1\u026d\1\u026c"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u026d\1\0"+
    "\1\56\2\0\2\u026d\1\0\1\56\17\0\1\56\3\0"+
    "\35\u026d\1\0\1\56\2\0\1\u026e\1\u026f\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u026e\1\0\1\56\2\0"+
    "\1\u0270\1\u026f\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u0270\1\0\1\56\2\0\2\u0270\1\0\1\56\17\0"+
    "\1\56\3\0\35\u0270\1\0\1\56\2\0\1\u0271\1\u0272"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u0271\1\0"+
    "\1\56\2\0\1\u0273\1\u0272\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u0273\1\0\1\56\2\0\2\u0273\1\0"+
    "\1\56\17\0\1\56\3\0\35\u0273\1\0\1\56\2\0"+
    "\1\u0274\1\u0275\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0274\1\0\1\56\2\0\1\u0276\1\u0275\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0276\1\0\1\56\2\0"+
    "\2\u0276\1\0\1\56\17\0\1\56\3\0\35\u0276\1\0"+
    "\1\56\2\0\1\u0277\1\u0278\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0277\1\0\1\56\2\0\1\u0279\1\u0278"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0279\1\0"+
    "\1\56\2\0\2\u0279\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0279\1\0\1\56\2\0\1\u027a\1\u027b\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u027a\1\0\1\56\2\0"+
    "\1\u027c\1\u027b\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\u027c\1\0\1\56\2\0\2\u027c\1\0\1\56\17\0"+
    "\1\56\3\0\35\u027c\1\0\1\56\2\0\1\u027d\1\u027e"+
    "\1\0\1\56\16\0\1\57\1\56\3\0\35\u027d\1\0"+
    "\1\56\2\0\1\u027f\1\u027e\1\0\1\56\16\0\1\62"+
    "\1\56\3\0\35\u027f\1\0\1\56\2\0\2\u027f\1\0"+
    "\1\56\17\0\1\56\3\0\35\u027f\1\0\1\56\2\0"+
    "\1\u0280\1\u0281\1\0\1\56\16\0\1\57\1\56\3\0"+
    "\35\u0280\1\0\1\56\2\0\1\u0282\1\u0281\1\0\1\56"+
    "\16\0\1\62\1\56\3\0\35\u0282\1\0\1\56\2\0"+
    "\2\u0282\1\0\1\56\17\0\1\56\3\0\35\u0282\1\0"+
    "\1\56\2\0\1\u0283\1\u0284\1\0\1\56\16\0\1\57"+
    "\1\56\3\0\35\u0283\1\0\1\56\2\0\1\u0285\1\u0284"+
    "\1\0\1\56\16\0\1\62\1\56\3\0\35\u0285\1\0"+
    "\1\56\2\0\2\u0285\1\0\1\56\17\0\1\56\3\0"+
    "\35\u0285\1\0\1\56\2\0\1\u0286\1\u0287\1\0\1\56"+
    "\16\0\1\57\1\56\3\0\35\u0286\1\0\1\56\2\0"+
    "\1\56\1\u0287\1\0\1\56\16\0\1\62\1\56\3\0"+
    "\35\56\1\0\1\56\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[34272];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\1\1\11\2\1\1\11\1\1\2\11\3\1\1\11"+
    "\1\1\1\11\2\1\4\11\32\1\1\0\2\1\1\0"+
    "\1\1\5\11\1\0\1\1\1\0\51\1\1\11\1\1"+
    "\1\0\3\1\2\0\3\1\4\0\53\1\1\11\7\1"+
    "\1\0\1\11\44\1\1\0\1\1\1\0\34\1\1\0"+
    "\1\1\1\0\23\1\1\0\1\11\15\1\1\0\12\1"+
    "\1\0\u016b\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[647];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
public String lexeme;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 196) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 31: 
          { return OPERADOR;
          }
        case 32: break;
        case 18: 
          { return OPERADOR_CORCHETE_CERRAR;
          }
        case 33: break;
        case 30: 
          { lexeme=yytext(); return LITERAL_NUM_FLOTANTE;
          }
        case 34: break;
        case 21: 
          { lexeme=yytext(); return ERROR;
          }
        case 35: break;
        case 6: 
          { return OPERADOR_COMA;
          }
        case 36: break;
        case 23: 
          { return OPERADOR_INCREMENTO;
          }
        case 37: break;
        case 19: 
          { return OPERADOR_DOS_PUNTOS;
          }
        case 38: break;
        case 14: 
          { return OPERADOR_DIVISION;
          }
        case 39: break;
        case 24: 
          { return OPERADOR_DISMINUCION;
          }
        case 40: break;
        case 5: 
          { /*No se procesa*/
          }
        case 41: break;
        case 22: 
          { lexeme=yytext(); return ERROR_IDENTIFICADOR;
          }
        case 42: break;
        case 25: 
          { return OPERADOR_MAYOR_IGUAL_QUE;
          }
        case 43: break;
        case 7: 
          { return TERMINADOR;
          }
        case 44: break;
        case 28: 
          { return PALABRA_RESERVADA;
          }
        case 45: break;
        case 12: 
          { return OPERADOR_MENOR_QUE;
          }
        case 46: break;
        case 4: 
          { lexeme=yytext(); return LITERAL_NUM_ENTERO;
          }
        case 47: break;
        case 10: 
          { return OPERADOR_MAYOR_QUE;
          }
        case 48: break;
        case 27: 
          { return OPERADOR_MENOR_IGUAL_QUE;
          }
        case 49: break;
        case 13: 
          { return OPERADOR_MULTIPLICACION;
          }
        case 50: break;
        case 16: 
          { return OPERADOR_PARENTESIS_CERRAR;
          }
        case 51: break;
        case 26: 
          { return OPERADOR_DIFERENTE_DE;
          }
        case 52: break;
        case 8: 
          { return OPERADOR_ADICION;
          }
        case 53: break;
        case 2: 
          { return ERROR;
          }
        case 54: break;
        case 3: 
          { lexeme=yytext(); return IDENTIFICADOR;
          }
        case 55: break;
        case 1: 
          { lexeme=yytext(); return ERROR_LITERAL;
          }
        case 56: break;
        case 9: 
          { return OPERADOR_SUSTRACCION;
          }
        case 57: break;
        case 29: 
          { lexeme=yytext(); return LITERAL_STRING;
          }
        case 58: break;
        case 15: 
          { return OPERADOR_PARENTESIS_ABRIR;
          }
        case 59: break;
        case 17: 
          { return OPERADOR_CORCHETE_ABRIR;
          }
        case 60: break;
        case 11: 
          { return OPERADOR_IGUAL;
          }
        case 61: break;
        case 20: 
          { return OPERADOR_PUNTO;
          }
        case 62: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
